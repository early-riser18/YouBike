version: '3.8'

services:
  spark-master:
    container_name: da-spark-master
    build: 
      context: ../../
      dockerfile: ./docker/spark/Dockerfile
    image: da-spark-image
    entrypoint: ["/opt/spark/entrypoint.sh", "master"]  
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - spark-logs:/opt/spark/spark-events
    env_file:
      - .env.spark
    ports:
      - '9090:8080'
      - '7070:7070'
      - '7077:7077'

    networks:
      - network1

  spark-history-server:
    container_name: da-spark-history
    image: da-spark-image
    entrypoint: ["/opt/spark/entrypoint.sh", "history"]  
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'
    networks:
      - network1

  spark-worker:
    image: da-spark-image
    entrypoint: ["/opt/spark/entrypoint.sh", "worker"]  
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - spark-logs:/opt/spark/spark-events
    networks:
      - network1

  gateway:
    build: 
      context: ../../
      dockerfile: ./docker/spark/Dockerfile
    depends_on:
      - spark-master
    entrypoint: ["/opt/spark/entrypoint.sh", "gateway"]
    # entrypoint: ["python3", "-m", "spark-test.py"]
    networks:
      - network1


  
volumes:
  spark-logs:

networks:
  network1:
    name: youbike
    external: true


